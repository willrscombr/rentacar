version: '3'
services:
  sonarqube:
    container_name:  sonarqube
    image:  sonarqube:latest
    ports:
        -  "9000:9000"
        -  "9092:9092"
    environment:
      - USER=admin
      - PASS=Admin
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092"
      - "9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
  
  keyclock:
    image: quay.io/keycloak/keycloak:15.0.2
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=h2
    ports:
      - 8080:8080


  auth:
    build: ./autenticacao/docker
    command: npm run start:dev
    #entrypoint: ./autenticacao/docker/entrypoint.sh
    ports:
      - 3001:3000
    volumes:
      - ./autenticacao/ui:/home/node/app
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - keyclock
    tty: true

  locadoras:
    build:
      dockerfile: Dockerfile
      context: ./locadoras
      # Only will build development stage from our dockerfile
      target: development
    # Mount our host Directory to the docker container
    # Mount (.) current directory to the docker container /home/node/app
    # reflect file changes from host to container
    environment:
      - TOKEN_SONAR=c21430ccf6cf40fcdaebaf8bd4a9f6c7dfe704ed
    volumes:
      - ./locadoras:/home/node/app
      - ./home/node/app/node_modules
    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
    # Run in dev Mode: npm run start:dev
    command: npm run start:dev
    ports:
      - 3002:3000
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - keyclock
    tty: true


  reservas:
    build:
      dockerfile: Dockerfile
      context: ./reservas
      target: development
    #entrypoint: ./autenticacao/docker/entrypoint.sh
    command: "npm run dev"
    ports:
      - 3003:3000
    volumes:
      - ./reservas:/home/node/app
      - /home/node/app/node_modules
      - /home/node/app/.next
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - locadoras
    tty: true

  api:
    build:
      dockerfile: Dockerfile
      context: ./apimanagement
    volumes:
      - ./apimanagement/conf:/etc/nginx/
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
